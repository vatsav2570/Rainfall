{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreev\\\\OneDrive\\\\Desktop\\\\Rainfall-Pattern\\\\rain-grid\\\\src\\\\grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(15, 40px);\n  grid-template-rows: repeat(20, 40px);\n  gap: 2px;\n  width: fit-content;\n  margin: auto;\n  margin-top: 50px;\n  background-color: #111;\n  padding: 10px;\n  border-radius: 10px;\n`;\n_c = GridContainer;\nconst DropAnimation = keyframes`\n  0% { opacity: 0; transform: translateY(-40px); }\n  10% { opacity: 1; transform: translateY(0); }\n  90% { opacity: 1; transform: translateY(800px); }\n  100% { opacity: 0; transform: translateY(840px); }\n`;\nconst Drop = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${props => props.color};\n  animation: ${DropAnimation} 2s linear infinite;\n  animation-delay: ${props => props.delay}s;\n`;\n_c2 = Drop;\nconst generateDrops = (rows, cols) => {\n  const drops = [];\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      drops.push({\n        color: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n        delay: Math.random() * 2\n      });\n    }\n  }\n  return drops;\n};\nconst RainfallGrid = () => {\n  _s();\n  const [drops, setDrops] = useState([]);\n  useEffect(() => {\n    setDrops(generateDrops(20, 15));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: drops.map((drop, index) => /*#__PURE__*/_jsxDEV(Drop, {\n      color: drop.color,\n      delay: drop.delay\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RainfallGrid, \"GbjsVWFSnns/F/fUpRGkpAymol8=\");\n_c3 = RainfallGrid;\nexport default RainfallGrid;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GridContainer\");\n$RefreshReg$(_c2, \"Drop\");\n$RefreshReg$(_c3, \"RainfallGrid\");","map":{"version":3,"names":["React","useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","GridContainer","div","_c","DropAnimation","Drop","props","color","delay","_c2","generateDrops","rows","cols","drops","i","j","push","Math","floor","random","toString","RainfallGrid","_s","setDrops","children","map","drop","index","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/sreev/OneDrive/Desktop/Rainfall-Pattern/rain-grid/src/grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(15, 40px);\r\n  grid-template-rows: repeat(20, 40px);\r\n  gap: 2px;\r\n  width: fit-content;\r\n  margin: auto;\r\n  margin-top: 50px;\r\n  background-color: #111;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst DropAnimation = keyframes`\r\n  0% { opacity: 0; transform: translateY(-40px); }\r\n  10% { opacity: 1; transform: translateY(0); }\r\n  90% { opacity: 1; transform: translateY(800px); }\r\n  100% { opacity: 0; transform: translateY(840px); }\r\n`;\r\n\r\nconst Drop = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${(props) => props.color};\r\n  animation: ${DropAnimation} 2s linear infinite;\r\n  animation-delay: ${(props) => props.delay}s;\r\n`;\r\n\r\nconst generateDrops = (rows, cols) => {\r\n  const drops = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    for (let j = 0; j < cols; j++) {\r\n      drops.push({\r\n        color: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n        delay: Math.random() * 2,\r\n      });\r\n    }\r\n  }\r\n  return drops;\r\n};\r\n\r\nconst RainfallGrid = () => {\r\n  const [drops, setDrops] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setDrops(generateDrops(20, 15));\r\n  }, []);\r\n\r\n  return (\r\n    <GridContainer>\r\n      {drops.map((drop, index) => (\r\n        <Drop key={index} color={drop.color} delay={drop.delay} />\r\n      ))}\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\nexport default RainfallGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,aAAa;AAanB,MAAMG,aAAa,GAAGN,SAAS;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMO,IAAI,GAAGR,MAAM,CAACK,GAAG;AACvB;AACA;AACA,sBAAuBI,KAAK,IAAKA,KAAK,CAACC,KAAK;AAC5C,eAAeH,aAAa;AAC5B,qBAAsBE,KAAK,IAAKA,KAAK,CAACE,KAAK;AAC3C,CAAC;AAACC,GAAA,GANIJ,IAAI;AAQV,MAAMK,aAAa,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAE;MAC7BF,KAAK,CAACG,IAAI,CAAC;QACTT,KAAK,EAAE,IAAIU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE;QAC9DZ,KAAK,EAAES,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG;MACzB,CAAC,CAAC;IACJ;EACF;EACA,OAAON,KAAK;AACd,CAAC;AAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACT,KAAK,EAAEU,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd4B,QAAQ,CAACb,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,aAAa;IAAAuB,QAAA,EACXX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB3B,OAAA,CAACK,IAAI;MAAaE,KAAK,EAAEmB,IAAI,CAACnB,KAAM;MAACC,KAAK,EAAEkB,IAAI,CAAClB;IAAM,GAA5CmB,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyC,CAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAACT,EAAA,CAdID,YAAY;AAAAW,GAAA,GAAZX,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAlB,EAAA,EAAAM,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}