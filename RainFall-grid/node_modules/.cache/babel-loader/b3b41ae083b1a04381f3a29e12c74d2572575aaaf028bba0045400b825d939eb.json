{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreev\\\\OneDrive\\\\Desktop\\\\Rainfall-Pattern\\\\rain-grid\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 20;\nconst numCols = 20;\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(createGrid());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      createRainfall();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const createRainfall = () => {\n    const randomColumn = Math.floor(Math.random() * numCols);\n    for (let i = 0; i < numRows; i++) {\n      setTimeout(() => {\n        setGrid(prevGrid => {\n          const newGrid = prevGrid.map((row, rowIndex) => row.map((cell, colIndex) => {\n            if (colIndex === randomColumn && rowIndex === i) {\n              return true;\n            }\n            return cell;\n          }));\n          return newGrid;\n        });\n      }, i * 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: cell ? '#00f' : ''\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WemSJr1/m+W3y0FtwTaIKwN8Jx4=\");\n_c = App;\nconst createGrid = () => {\n  const grid = [];\n  for (let i = 0; i < numRows; i++) {\n    const row = [];\n    for (let j = 0; j < numCols; j++) {\n      row.push(false);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","numRows","numCols","App","_s","grid","setGrid","createGrid","interval","setInterval","createRainfall","clearInterval","randomColumn","Math","floor","random","i","setTimeout","prevGrid","newGrid","map","row","rowIndex","cell","colIndex","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","j","push","$RefreshReg$"],"sources":["C:/Users/sreev/OneDrive/Desktop/Rainfall-Pattern/rain-grid/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst numRows = 20;\nconst numCols = 20;\n\nconst App = () => {\n  const [grid, setGrid] = useState(createGrid());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      createRainfall();\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const createRainfall = () => {\n    const randomColumn = Math.floor(Math.random() * numCols);\n    for (let i = 0; i < numRows; i++) {\n      setTimeout(() => {\n        setGrid(prevGrid => {\n          const newGrid = prevGrid.map((row, rowIndex) =>\n            row.map((cell, colIndex) => {\n              if (colIndex === randomColumn && rowIndex === i) {\n                return true;\n              }\n              return cell;\n            })\n          );\n          return newGrid;\n        });\n      }, i * 100);\n    }\n  };\n\n  return (\n    <div className=\"grid\">\n      {grid.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"row\">\n          {row.map((cell, colIndex) => (\n            <div\n              key={colIndex}\n              className=\"cell\"\n              style={{ backgroundColor: cell ? '#00f' : '' }}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst createGrid = () => {\n  const grid = [];\n  for (let i = 0; i < numRows; i++) {\n    const row = [];\n    for (let j = 0; j < numCols; j++) {\n      row.push(false);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAG,EAAE;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC;EAE9CV,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCC,cAAc,CAAC,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAME,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,OAAO,CAAC;IACxD,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,OAAO,EAAEe,CAAC,EAAE,EAAE;MAChCC,UAAU,CAAC,MAAM;QACfX,OAAO,CAACY,QAAQ,IAAI;UAClB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KACzCD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,KAAK;YAC1B,IAAIA,QAAQ,KAAKZ,YAAY,IAAIU,QAAQ,KAAKN,CAAC,EAAE;cAC/C,OAAO,IAAI;YACb;YACA,OAAOO,IAAI;UACb,CAAC,CACH,CAAC;UACD,OAAOJ,OAAO;QAChB,CAAC,CAAC;MACJ,CAAC,EAAEH,CAAC,GAAG,GAAG,CAAC;IACb;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKyB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBrB,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBtB,OAAA;MAAoByB,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChCL,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACtBxB,OAAA;QAEEyB,SAAS,EAAC,MAAM;QAChBE,KAAK,EAAE;UAAEC,eAAe,EAAEL,IAAI,GAAG,MAAM,GAAG;QAAG;MAAE,GAF1CC,QAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACF;IAAC,GAPMV,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA7CID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA+CT,MAAMI,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMF,IAAI,GAAG,EAAE;EACf,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,OAAO,EAAEe,CAAC,EAAE,EAAE;IAChC,MAAMK,GAAG,GAAG,EAAE;IACd,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhC,OAAO,EAAEgC,CAAC,EAAE,EAAE;MAChCb,GAAG,CAACc,IAAI,CAAC,KAAK,CAAC;IACjB;IACA9B,IAAI,CAAC8B,IAAI,CAACd,GAAG,CAAC;EAChB;EACA,OAAOhB,IAAI;AACb,CAAC;AAED,eAAeF,GAAG;AAAC,IAAA8B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}