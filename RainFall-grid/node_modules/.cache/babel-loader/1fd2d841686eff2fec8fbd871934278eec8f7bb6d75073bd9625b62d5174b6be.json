{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreev\\\\OneDrive\\\\Desktop\\\\Rainfall-Pattern\\\\rain-grid\\\\src\\\\grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_ROWS = 20;\nconst GRID_COLS = 15;\nconst INITIAL_INTERVAL = 500; // Initial interval for the falling effect in ms\n\nconst getRandomInt = max => Math.floor(Math.random() * max);\nconst Grid = () => {\n  _s();\n  const [grid, setGrid] = useState(Array(GRID_ROWS).fill().map(() => Array(GRID_COLS).fill(false)));\n  const [colors, setColors] = useState(Array(GRID_ROWS).fill().map(() => Array(GRID_COLS).fill(null)));\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setGrid(prevGrid => {\n        const newGrid = prevGrid.map(row => row.slice());\n        for (let col = 0; col < GRID_COLS; col++) {\n          let emptyRow = GRID_ROWS - 1;\n          while (emptyRow >= 0 && newGrid[emptyRow][col]) {\n            emptyRow--;\n          }\n          if (emptyRow >= 0) {\n            newGrid[emptyRow][col] = true;\n            newGrid[emptyRow][col] = false;\n            setColors(prevColors => {\n              const newColors = prevColors.map(row => row.slice());\n              newColors[emptyRow][col] = `hsl(${getRandomInt(360)}, 100%, 50%)`;\n              return newColors;\n            });\n          }\n        }\n        return newGrid;\n      });\n    }, INITIAL_INTERVAL);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: colors[rowIndex][colIndex]\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"Kd0qb6anpRRhwgpkLPBi6JAke4s=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GRID_ROWS","GRID_COLS","INITIAL_INTERVAL","getRandomInt","max","Math","floor","random","Grid","_s","grid","setGrid","Array","fill","map","colors","setColors","intervalId","setInterval","prevGrid","newGrid","row","slice","col","emptyRow","prevColors","newColors","clearInterval","className","children","rowIndex","cell","colIndex","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sreev/OneDrive/Desktop/Rainfall-Pattern/rain-grid/src/grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './grid.css';\r\n\r\nconst GRID_ROWS = 20;\r\nconst GRID_COLS = 15;\r\nconst INITIAL_INTERVAL = 500; // Initial interval for the falling effect in ms\r\n\r\nconst getRandomInt = (max) => Math.floor(Math.random() * max);\r\n\r\nconst Grid = () => {\r\n  const [grid, setGrid] = useState(Array(GRID_ROWS).fill().map(() => Array(GRID_COLS).fill(false)));\r\n  const [colors, setColors] = useState(Array(GRID_ROWS).fill().map(() => Array(GRID_COLS).fill(null)));\r\n  \r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setGrid((prevGrid) => {\r\n        const newGrid = prevGrid.map((row) => row.slice());\r\n\r\n        for (let col = 0; col < GRID_COLS; col++) {\r\n          let emptyRow = GRID_ROWS - 1;\r\n          while (emptyRow >= 0 && newGrid[emptyRow][col]) {\r\n            emptyRow--;\r\n          }\r\n          if (emptyRow >= 0) {\r\n            newGrid[emptyRow][col] = true;\r\n            newGrid[emptyRow][col] = false;\r\n            setColors((prevColors) => {\r\n              const newColors = prevColors.map((row) => row.slice());\r\n              newColors[emptyRow][col] = `hsl(${getRandomInt(360)}, 100%, 50%)`;\r\n              return newColors;\r\n            });\r\n          }\r\n        }\r\n        return newGrid;\r\n      });\r\n    }, INITIAL_INTERVAL);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {grid.map((row, rowIndex) => (\r\n        <div className=\"row\" key={rowIndex}>\r\n          {row.map((cell, colIndex) => (\r\n            <div\r\n              className=\"cell\"\r\n              key={colIndex}\r\n              style={{ backgroundColor: colors[rowIndex][colIndex] }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}