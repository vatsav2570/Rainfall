{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreev\\\\OneDrive\\\\Desktop\\\\Rainfall-Pattern\\\\rain-grid\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 20;\nconst numCols = 20;\nconst maxActiveColumns = 2; // Maximum number of active rainfall columns\n\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(createGrid());\n  const [colorIndex, setColorIndex] = useState(0);\n  const colorIndexRef = useRef(colorIndex);\n  const colors = [['#ff00ff', '#e600e6', '#cc00cc', '#b300b3', '#990099'],\n  // Five intensities for each color\n  ['#00ffff', '#00e6e6', '#00cccc', '#00b3b3', '#009999'], ['#ffff00', '#e6e600', '#cccc00', '#b3b300', '#999900'], ['#ff4500', '#e63e00', '#cc3700', '#b33000', '#992900'],\n  // New color (orange-red)\n  ['#00ff00', '#00e600', '#00cc00', '#00b300', '#009900'] // New color (green)\n  ];\n  useEffect(() => {\n    const colorChangeInterval = setInterval(() => {\n      setColorIndex(prevIndex => {\n        const newIndex = (prevIndex + 1) % colors.length;\n        colorIndexRef.current = newIndex; // Update the ref with the new color index\n        return newIndex;\n      });\n    }, 3000); // Change color every 3 seconds\n\n    // Initialize multiple rainfalls with random delays\n    for (let i = 0; i < maxActiveColumns; i++) {\n      startRainfallWithRandomDelay();\n    }\n    return () => {\n      clearInterval(colorChangeInterval);\n    };\n  }, []);\n  const startRainfallWithRandomDelay = () => {\n    const randomDelay = Math.random() * 2000; // Random delay between 0 and 2 seconds\n    setTimeout(() => {\n      createRainfall();\n      startRainfallWithRandomDelay(); // Recursively start another rainfall after a random delay\n    }, randomDelay);\n  };\n  const createRainfall = () => {\n    const randomColumn = Math.floor(Math.random() * numCols);\n    for (let i = 0; i < numRows + 5; i++) {\n      setTimeout(() => {\n        setGrid(prevGrid => {\n          const newGrid = prevGrid.map((row, rowIndex) => row.map((cell, colIndex) => {\n            if (colIndex === randomColumn) {\n              if (rowIndex >= i && rowIndex < i + 5) {\n                return colors[colorIndexRef.current][rowIndex - i];\n              } else if (rowIndex === i - 1) {\n                return false;\n              }\n            }\n            return cell;\n          }));\n          return newGrid;\n        });\n      }, i * 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: cell ? cell : ''\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UhvGaSOfISlsl1LYBQPgpKkR1r8=\");\n_c = App;\nconst createGrid = () => {\n  const grid = [];\n  for (let i = 0; i < numRows; i++) {\n    const row = [];\n    for (let j = 0; j < numCols; j++) {\n      row.push(false);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","numRows","numCols","maxActiveColumns","App","_s","grid","setGrid","createGrid","colorIndex","setColorIndex","colorIndexRef","colors","colorChangeInterval","setInterval","prevIndex","newIndex","length","current","i","startRainfallWithRandomDelay","clearInterval","randomDelay","Math","random","setTimeout","createRainfall","randomColumn","floor","prevGrid","newGrid","map","row","rowIndex","cell","colIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","j","push","$RefreshReg$"],"sources":["C:/Users/sreev/OneDrive/Desktop/Rainfall-Pattern/rain-grid/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport './Grid.css';\n\nconst numRows = 20;\nconst numCols = 20;\nconst maxActiveColumns = 2; // Maximum number of active rainfall columns\n\nconst App = () => {\n  const [grid, setGrid] = useState(createGrid());\n  const [colorIndex, setColorIndex] = useState(0);\n  const colorIndexRef = useRef(colorIndex);\n\n  const colors = [\n    ['#ff00ff', '#e600e6', '#cc00cc', '#b300b3', '#990099'], // Five intensities for each color\n    ['#00ffff', '#00e6e6', '#00cccc', '#00b3b3', '#009999'],\n    ['#ffff00', '#e6e600', '#cccc00', '#b3b300', '#999900'],\n    ['#ff4500', '#e63e00', '#cc3700', '#b33000', '#992900'], // New color (orange-red)\n    ['#00ff00', '#00e600', '#00cc00', '#00b300', '#009900']  // New color (green)\n  ];\n\n  useEffect(() => {\n    const colorChangeInterval = setInterval(() => {\n      setColorIndex(prevIndex => {\n        const newIndex = (prevIndex + 1) % colors.length;\n        colorIndexRef.current = newIndex; // Update the ref with the new color index\n        return newIndex;\n      });\n    }, 3000); // Change color every 3 seconds\n\n    // Initialize multiple rainfalls with random delays\n    for (let i = 0; i < maxActiveColumns; i++) {\n      startRainfallWithRandomDelay();\n    }\n\n    return () => {\n      clearInterval(colorChangeInterval);\n    };\n  }, []);\n\n  const startRainfallWithRandomDelay = () => {\n    const randomDelay = Math.random() * 2000; // Random delay between 0 and 2 seconds\n    setTimeout(() => {\n      createRainfall();\n      startRainfallWithRandomDelay(); // Recursively start another rainfall after a random delay\n    }, randomDelay);\n  };\n\n  const createRainfall = () => {\n    const randomColumn = Math.floor(Math.random() * numCols);\n\n    for (let i = 0; i < numRows + 5; i++) {\n      setTimeout(() => {\n        setGrid(prevGrid => {\n          const newGrid = prevGrid.map((row, rowIndex) =>\n            row.map((cell, colIndex) => {\n              if (colIndex === randomColumn) {\n                if (rowIndex >= i && rowIndex < i + 5) {\n                  return colors[colorIndexRef.current][rowIndex - i];\n                } else if (rowIndex === i - 1) {\n                  return false;\n                }\n              }\n              return cell;\n            })\n          );\n          return newGrid;\n        });\n      }, i * 100);\n    }\n  };\n\n  return (\n    <div className=\"grid\">\n    <h1></h1>\n      {grid.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"row\">\n          {row.map((cell, colIndex) => (\n            <div\n              key={colIndex}\n              className=\"cell\"\n              style={{ backgroundColor: cell ? cell : '' }}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst createGrid = () => {\n  const grid = [];\n  for (let i = 0; i < numRows; i++) {\n    const row = [];\n    for (let j = 0; j < numCols; j++) {\n      row.push(false);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}