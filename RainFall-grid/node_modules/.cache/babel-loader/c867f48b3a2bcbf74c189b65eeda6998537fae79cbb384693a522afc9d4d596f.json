{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreev\\\\OneDrive\\\\Desktop\\\\Rainfall-Pattern\\\\rain-grid\\\\src\\\\grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 20;\nconst numCols = 20;\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(createGrid());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setGrid(prevGrid => createRainfall(prevGrid));\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: cell ? '#00f' : ''\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WemSJr1/m+W3y0FtwTaIKwN8Jx4=\");\n_c = App;\nconst createGrid = () => {\n  const grid = [];\n  for (let i = 0; i < numRows; i++) {\n    const row = [];\n    for (let j = 0; j < numCols; j++) {\n      row.push(false);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\nconst createRainfall = grid => {\n  const newGrid = grid.map(row => row.map(cell => false));\n  const randomColumn = Math.floor(Math.random() * numCols);\n  for (let i = 0; i < numRows; i++) {\n    setTimeout(() => {\n      newGrid[i][randomColumn] = true;\n      setGrid([...newGrid]);\n    }, i * 100);\n  }\n  return newGrid;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","numRows","numCols","App","_s","grid","setGrid","createGrid","interval","setInterval","prevGrid","createRainfall","clearInterval","className","children","map","row","rowIndex","cell","colIndex","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","i","j","push","newGrid","randomColumn","Math","floor","random","setTimeout","$RefreshReg$"],"sources":["C:/Users/sreev/OneDrive/Desktop/Rainfall-Pattern/rain-grid/src/grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './.css';\r\n\r\nconst numRows = 20;\r\nconst numCols = 20;\r\n\r\nconst App = () => {\r\n  const [grid, setGrid] = useState(createGrid());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setGrid((prevGrid) => createRainfall(prevGrid));\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {grid.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"row\">\r\n          {row.map((cell, colIndex) => (\r\n            <div\r\n              key={colIndex}\r\n              className=\"cell\"\r\n              style={{ backgroundColor: cell ? '#00f' : '' }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst createGrid = () => {\r\n  const grid = [];\r\n  for (let i = 0; i < numRows; i++) {\r\n    const row = [];\r\n    for (let j = 0; j < numCols; j++) {\r\n      row.push(false);\r\n    }\r\n    grid.push(row);\r\n  }\r\n  return grid;\r\n};\r\n\r\nconst createRainfall = (grid) => {\r\n  const newGrid = grid.map(row => row.map(cell => false));\r\n  const randomColumn = Math.floor(Math.random() * numCols);\r\n  for (let i = 0; i < numRows; i++) {\r\n    setTimeout(() => {\r\n      newGrid[i][randomColumn] = true;\r\n      setGrid([...newGrid]);\r\n    }, i * 100);\r\n  }\r\n  return newGrid;\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAG,EAAE;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC;EAE9CV,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCH,OAAO,CAAEI,QAAQ,IAAKC,cAAc,CAACD,QAAQ,CAAC,CAAC;IACjD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBT,IAAI,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBjB,OAAA;MAAoBa,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChCE,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACtBnB,OAAA;QAEEa,SAAS,EAAC,MAAM;QAChBO,KAAK,EAAE;UAAEC,eAAe,EAAEH,IAAI,GAAG,MAAM,GAAG;QAAG;MAAE,GAF1CC,QAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACF;IAAC,GAPMR,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1BID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA4BT,MAAMI,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMF,IAAI,GAAG,EAAE;EACf,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,OAAO,EAAE0B,CAAC,EAAE,EAAE;IAChC,MAAMX,GAAG,GAAG,EAAE;IACd,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,OAAO,EAAE0B,CAAC,EAAE,EAAE;MAChCZ,GAAG,CAACa,IAAI,CAAC,KAAK,CAAC;IACjB;IACAxB,IAAI,CAACwB,IAAI,CAACb,GAAG,CAAC;EAChB;EACA,OAAOX,IAAI;AACb,CAAC;AAED,MAAMM,cAAc,GAAIN,IAAI,IAAK;EAC/B,MAAMyB,OAAO,GAAGzB,IAAI,CAACU,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACD,GAAG,CAACG,IAAI,IAAI,KAAK,CAAC,CAAC;EACvD,MAAMa,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhC,OAAO,CAAC;EACxD,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,OAAO,EAAE0B,CAAC,EAAE,EAAE;IAChCQ,UAAU,CAAC,MAAM;MACfL,OAAO,CAACH,CAAC,CAAC,CAACI,YAAY,CAAC,GAAG,IAAI;MAC/BzB,OAAO,CAAC,CAAC,GAAGwB,OAAO,CAAC,CAAC;IACvB,CAAC,EAAEH,CAAC,GAAG,GAAG,CAAC;EACb;EACA,OAAOG,OAAO;AAChB,CAAC;AAED,eAAe3B,GAAG;AAAC,IAAAuB,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}